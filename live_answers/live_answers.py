"""
TODO: DOCSTRING
"""

import json
from lxml import etree

import requests


class Handler():
    def __init__(self, username: str = None, password: str = None, sessid: str = None) -> None:
        """
        Default constructor, creates new session using the username
        and password passed.
        !! will log out the account from all Eduka platforms (PC, phone, etc)
        
        If sessid is passed creates the session using it, doesn't log out
        other devices.
        PHPSESSID is a cookie that stores the current login session
        in Eduka. You can find it dev tools, cookies. By using it the python
        requests won't log out other logged in devices.

        
        For an easier way of authentication check Handler.
        
        :param str username: Eduka username
        :param str password: Eduka password
        :param str sessid: Eduka PHPSESSID cookie
        
        :raises TypeError: if no arguments were passed
        """

        if sessid:
            self.login_using_sessid(sessid)
            
        elif username and password:
            self.login_using_creds(username, password)
            
        else:
            raise TypeError("Handler().__init__() missing sessid or username + password positional arguments")
    
    def login_using_creds(self, username: str, password:str) -> None:
        """
        Creates a session with provided credentials
        
        :param str username: Eduka username
        :param str password: Eduka password
        
        :raises HTTPError: if the login is unsuccessful
        """
        login_data = {
            'username': username,
            'password': password
        }
        
        self.session = requests.Session()
        login_status = self.session.post("https://klase.eduka.lt/api/anonymously/login", data=login_data)
        
        login_status.raise_for_status()
        
    def login_using_sessid(self, sessid: str) -> None:
        """
        Creates a session from a provided sessid
        
        PHPSESSID is a cookie that stores the current login session
        in Eduka. You can find it dev tools, cookies. By using it the python
        requests won't log out other logged in devices.
        
        :param str sessid: Eduka PHPSESSID cookie
        """
        
        self.session = requests.Session()
        self.session.cookies.set("PHPSESSID", sessid)
        
    def get_live_answers_xml(self, test_ID: int) -> str:
        """
        Returns xml answers sheet stored in a string. This string
        contains <![CDATA]> tags. These tags should be used like indicators
        when parsing the XML file.
        
        The return of this function needs to be parsed in order to
        be usable.
        
        :param int test_id: Test id
        
        :returns str answers_xml: string filled with api response
        """
        xml_request = self.session.get(f"https://klase.eduka.lt/api/student/quiz-templates/result-xml/{test_ID}/perziura")
        xml_request.raise_for_status()
        
        return xml_request.text
    
    #TODO: parser implementation
    #TODO: think about using lxml instead of ElementTree (CDATA parsing, more efficient)
    def parse_live_answers_xml(self, parsing_string: str) -> dict:
        """
        """
        
        xml = etree.fromstring(parsing_string)
        
        
        
    
    
exp = Handler(sessid=7)
    